@model MvcTesting.ViewModels.UserIndexViewModel

<h1>User Index</h1>

<div class="btn-group">
    <a class="btn btn-primary" asp-controller="Users" asp-action="Index" asp-route-sortBy="Updated" asp-route-descending="true">Sort by Most Recent Activity</a>
    <a class="btn btn-primary" asp-controller="Users" asp-action="Index" asp-route-sortBy="Updated">Sort by Oldest Activity</a>
    <a class="btn btn-primary" asp-controller="Users" asp-action="Index" asp-route-sortBy="UserName">Sort by Username</a>
    <a class="btn btn-primary" asp-controller="Users" asp-action="Index" asp-route-sortBy="UserName" asp-route-descending="true">Sort by Username - Descending</a>
</div>

<hr />

<ul>

    @foreach (var user in Model.Users)
    {
        <li>
            <label for="@user.UserName">
                <a asp-controller="Users" asp-action="DisplayUser" asp-route-username="@user.UserName">@user.UserName</a>
            </label>
        </li>
    }

</ul>



<form asp-controller="Users" asp-action="Index">
    <ul class="pager">

        @if (Model.CurrentPage > 1)
            {
            <li><button class="btn btn-primary" name="page" value="@(Model.CurrentPage -1)">Previous</button></li>
        }
        @if (Model.LastPage > Model.CurrentPage)
            {
            <li><button class="btn btn-primary" name="page" value="@(Model.CurrentPage +1)">Next</button></li>
        }

    </ul>
</form>