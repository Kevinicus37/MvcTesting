@model MvcTesting.ViewModels.ViewMovieViewModel

@inject UserManager<ApplicationUser> UserManager

<div class="row">
    <div class="col-md-10 main-film-top-margin">
        <div class="row">
            <div class="col-md-4 poster">
                    <div class="center-block">
                        <img src="@Model.PosterUrl" class="img-responsive" />
                    </div>
            </div>
            <div class="col-md-8">
                <div class="row main-film-info margin-right-offset" style="border-bottom:3px groove gray">
                    <h1>
                        <span style="color: ghostwhite;">@Model.Film.Name</span><small> @Model.DisplayYear</small>
                        @if (Model.Film.UserID == UserManager.GetUserId(User) || User.IsInRole("Admin"))
                        {
                            <a class="btn btn-primary" asp-controller="Movie" asp-action="Edit" asp-route-id="@Model.Film.ID">Edit this Movie</a>
                        }
                        @if (User.Identity.IsAuthenticated)
                        {
                            <a class="btn btn-primary" asp-controller="Movie" asp-action="Copy" asp-route-id="@Model.Film.ID">Copy this Movie</a>
                        }
                    </h1>
                </div>
                
                    @if (!string.IsNullOrEmpty(Model.Film.Overview))
                    {
                        <div class="row main-film-info">
                            <h2>Synopsis</h2>
                            @Model.Film.Overview
                            <br />
                        </div>
                    }
                @if (Model.CastMembers.Count > 0)
                {
                <div class="row main-film-info">
                    <h2>Top Cast Members</h2>
                </div>
                <div class="row">
                    @foreach (var castMember in Model.CastMembers)
                    {
                        <div class="col-md-4 cast-display">
                            @castMember
                        </div>
                    }
                </div>
                }
                @if (!string.IsNullOrEmpty(Model.Comments))
                {
                <div class="row main-film-info">
                    <h2>Comments from @Model.FilmOwnerName</h2>
                    <p>@Model.Comments</p>
                </div>
                }
            </div>
        </div>
        <br /><br />
        @if (!string.IsNullOrEmpty(Model.Film.TrailerUrl)){
        <div class="row">
            <h2>Trailer</h2>
            <br />
        </div>
        <div class="row embed-responsive embed-responsive-16by9 margin-right-offset">
            <iframe class="embed-responsive-item" src="@Model.Film.TrailerUrl" frameborder="0" allowfullscreen></iframe>
        </div>
        }
    </div>
    <div class="col-md-2 extra-film-info">
        @* Film User Image, Name, Collection Count, Film Media Format, Film Audio FOrmat, Runtime, 3D?, Genre, and user rating goes here. *@
        <div class="row">
            <img src="@Model.OwnerProfilePicture" class="image-centered profilePicture" />
        </div>
        <div class="row text-centered">
            <a asp-controller="Users" asp-action="DisplayUser" asp-route-username="@Model.FilmOwnerName">@Model.FilmOwnerName (@Model.OwnerCollectionSize)</a>
        </div>
        <hr />
        <div class="film-stats">
        <div class="row">
            <form asp-controller="Movie" asp-action="Search" method="post">
                <h4>Format:</h4>
                <button class="filter-link" type="submit" name="MediaFilter" value="@Model.MediaFormat">@Model.MediaFormat</button>
            </form>
        </div>
        <div class="row">
            <form asp-controller="Movie" asp-action="Search" method="post">
                <h4>Audio:</h4>
                <button class="filter-link" type="submit" name="AudioFilter" value="@Model.AudioFormat">@Model.AudioFormat</button>
            </form>
</div>
        <div class="row">
            <h4>Runtime <small>(in minutes)</small>:</h4>
            <p>@Model.RunTime</p>
        </div>
        <div class="row">
            <h4>Directed By:</h4>
            <p>@Model.Directors</p>
        </div>
        <div class="row">
            <h4>Playable in 3D?</h4>
            <p>@Model.OptionFor3D</p>
        </div>
        @if (Model.Genres.Count > 0)
        {
            <div class="row">
                <h4>Genres</h4>
                <ul>
                    @foreach (var genre in Model.Genres)
                    {
                        <li><form asp-controller="Movie" asp-action="Search" method="post">
                            <button class="filter-link" type="submit" name="GenreFilter" value="@genre.Genre.Name">@genre.Genre.Name</button>
                            </form>
                        </li>
                    }
                </ul>
            </div>
        }
        </div>
    </div>
</div>
<br />
@if (UserManager.GetUserId(User) == Model.Film.UserID || User.IsInRole("Admin"))
{
    <form asp-controller="Movie" asp-action="Remove" method="post">
        <input type="hidden" name="filmIds" value="@Model.Film.ID" />
        <button type="submit" class="btn btn-danger">Delete this Movie</button>
    </form>
}