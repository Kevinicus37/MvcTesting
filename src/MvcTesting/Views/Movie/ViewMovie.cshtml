@model MvcTesting.ViewModels.ViewMovieViewModel

@inject UserManager<ApplicationUser> UserManager
<div class="page-header">
   
        <h1>
            @Model.Film.Name @Model.DisplayYear
            @if (Model.Film.UserID == UserManager.GetUserId(User) || User.IsInRole("Admin") )
            {
                <a class="btn btn-primary" asp-controller="Movie" asp-action="Edit" asp-route-id="@Model.Film.ID">Edit this Movie</a>
            }
        </h1>
    

</div>

@if (!string.IsNullOrEmpty(Model.Film.PosterUrl))
    {
    <div class="center-block">
        <img src="@Model.Film.PosterUrl" />
    </div>
    }

@if (Model.CastMembers.Count > 0)
{
    <h2>Cast</h2>
    <ul>
        @foreach (var cast in Model.CastMembers)
        {
            <li>@cast</li>
        }
    </ul>
}

@if (!string.IsNullOrEmpty(Model.Film.Overview))
{
    <h2>Synopsis</h2>
    @Model.Film.Overview
    <br />
}

@if (!string.IsNullOrEmpty(Model.Film.TrailerUrl))
    {
    <h2>Trailer</h2>
    <iframe width="560" height="315" src="@Model.Film.TrailerUrl" frameborder="0" allowfullscreen></iframe>
    }

@if (UserManager.GetUserId(User) == Model.Film.UserID || User.IsInRole("Admin") )
{
    <form asp-controller="Movie" asp-action="Remove" method="post">
        <input type="hidden" name="filmIds" value="@Model.Film.ID" />
        <button type="submit" class="btn btn-danger">Delete this Movie</button>
    </form>
}